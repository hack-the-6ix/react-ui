@use '../../styles/colors.module';
@use '../../styles/mixins.module';

.outline {
  @each $color, $_ in colors.$config {
    &--#{$color} {
      border-color: colors.getColor($color);
    }
  }
}

.placeholdercolor{
  @each $color, $_ in colors.$config {
    &--#{$color} {
      &::placeholder{
        color: colors.getColor($color)
      }
    }
  }
}

.textcolor{
  @each $color, $_ in colors.$config {
    &--#{$color} {
      color: colors.getColor($color)
    }
  }
}


.input {
  @include mixins.transition(border-color);
  padding: 0.75rem;
  border-radius: 4rem;
  border-style: solid;
  border-width: 2px;
  background-color: colors.getColor(neutral-50);
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: space-between;

  &:disabled {
    // TODO: 'neutral-50' with 38% opacity for Disabled State on entire component
    border-color: colors.getColor(neutral-50, null, 0.38);
    background-color: colors.getColor(neutral-50, null, 0.38);
    cursor: not-allowed;
  }

  &:hover {
    border-color: colors.getColor(neutral-300);
  }
  
  &:active {
    border-color: colors.getColor(primary-500);
  }
  
  &:focus {
    outline: none;
    border-color: colors.getColor(primary-500);
    background-color: colors.getColor(shades-0);
  }
  
}

.translucent {
  background-color: colors.getColor(neutral-50, null, var(--translucency));

  &:focus {
    background-color: colors.getColor(neutral-50, null, var(--translucency) + 0.12)
  }
}

.noborder {
  border-width: 0px;
}