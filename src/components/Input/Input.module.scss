@use '../../styles/colors.module';
@use '../../styles/mixins.module';

.outline {
  @each $color, $_ in colors.$config {
    &--#{$color} {
      border-color: colors.getColor($color);
    }
  }
}

.input {
  @include mixins.transition(border-color);
  padding: 0.75rem;
  border-radius: 4rem;
  border-style: solid;
  border-width: 2px;
  background-color: colors.getColor(neutral-50);
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: space-between;

  &:disabled {
    // TODO: 'neutral-50' with 38% opacity for Disabled State on entire component
    border-color: colors.getColor(neutral-50, null, 0.38);
    background-color: colors.getColor(neutral-50, null, 0.38);
    cursor: not-allowed;
  }

  &:hover {
    border-color: colors.getColor(neutral-300);
  }

  &:active {
    border-color: colors.getColor(primary-500);
  }

  &:focus {
    outline: none;
    border-color: colors.getColor(primary-500);
    background-color: colors.getColor(shades-0);
  }
}

.input-container {
  position: relative;
}

.input-container > *:nth-child(2) {
  position: absolute;
  right: 1em;
  top: 50%;
  transform: translateY(-50%);
}

.input-container.manage-opacity.has-content > *:nth-child(2) {
  opacity: 30%;
  @include mixins.transition(opacity);

  &:hover {
    opacity: 100%;
  }
}

.iconDefault,
.iconFilled {
  display: block;
  margin-left: auto;
}
